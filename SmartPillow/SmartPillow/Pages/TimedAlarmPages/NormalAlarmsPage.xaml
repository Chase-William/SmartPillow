<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:skia="clr-namespace:SkiaSharp.Views.Forms;assembly=SkiaSharp.Views.Forms" 
             xmlns:vm="clr-namespace:SmartPillowLib.ViewModels.TimedAlarmVMs;assembly=SmartPillowLib" 
             xmlns:controls="clr-namespace:SmartPillow.Controls.TimedAlarms"
             mc:Ignorable="d"
             x:Class="SmartPillow.Pages.TimedAlarmPages.NormalAlarmsPage"
             x:Name="page">

    <ContentPage.BindingContext>
        <vm:NormalAlarmsVM x:Name="bindingContext"/>
    </ContentPage.BindingContext>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="New"
                     Command="{Binding CreateNewAlarmCMD}"
                     Priority="0"
                     Order="Primary"/>
        <ToolbarItem Text="Delete"
                     Command="{Binding InvokeDeleteModeCMD}"
                     Priority="0"
                     Order="Secondary"/>
    </ContentPage.ToolbarItems>
    
    <Grid>

        <skia:SKCanvasView x:Name="SKCanvas" PaintSurface="SKCanvas_PaintSurface"/>

        <StackLayout>
            <Frame x:Name="searchFrame" BackgroundColor="White" CornerRadius="10" Margin="10" Padding="3" HorizontalOptions="FillAndExpand">
                <SearchBar Text="{Binding QueryText}"/>
            </Frame>

            <StackLayout IsVisible="{Binding Source={x:Reference bindingContext}, Path=IsDeleteModeActive}" Orientation="Horizontal" Margin="0,10">
                <!-- Need to bind the IsDeleteModeActive to the SPSelectAllListViewBtn because it needs to know when it has been made visible -->
                <controls:SPSelectAllListViewBtn HorizontalOptions="Start" Margin="35,0,0,0" WidthRequest="30" IsVisible="{Binding Source={x:Reference bindingContext}, Path=IsDeleteModeActive}" Command="{Binding ToggleAllAlarmsCMD}"/>
                <Label TextColor="{StaticResource GrayedFont}" Text="All" VerticalOptions="Center"/>
                <controls:SPDeleteBtn Command="{Binding DeleteAlarmsCMD}" WidthRequest="50" HeightRequest="50" HorizontalOptions="EndAndExpand" Margin="0,0,35,0" IsVisible="{Binding IsDeleteModeActive}"/>
            </StackLayout>
            <!-- Contains a collection of timed alarms -->
            <ListView x:Name="listview"
                      ItemsSource="{Binding Alarms}" 
                      HasUnevenRows="True"
                      ItemAppearing="listview_ItemAppearing"                     
                      SelectedItem="{Binding SelectedItem}"
                      ItemTapped="ListView_ItemTapped">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell x:Name="viewCell">
                            <StackLayout Orientation="Horizontal" Padding="5" Margin="30,10">
                                <controls:SPSelectThisListViewBtn x:Name="selectThis" ToggleVisibility="{Binding Source={x:Reference bindingContext}, Path=IsDeleteModeActive}" IsChecked="{Binding ToBeDeleted}" WidthRequest="30" SiblingGrid="{x:Reference grid}" ParentViewCell="{x:Reference viewCell}"/>
                                <Grid HeightRequest="70" x:Name="grid" BackgroundColor="Yellow">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="0.4*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1.2*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Text="{Binding GetNormalTime}" TextColor="White" FontSize="35"/>
                                    <Label Text="{Binding Name}" TextColor="{StaticResource GrayedFont}" Grid.Row="1"/>

                                </Grid>
                                <Switch IsToggled="{Binding IsAlarmEnabled}" HorizontalOptions="EndAndExpand"/>
                            </StackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackLayout>
    </Grid>

</ContentPage>